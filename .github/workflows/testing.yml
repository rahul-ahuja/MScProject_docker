##  Named of the workflow.
name: testing

## Set the trigger policy.
## In this case, the workflow is execute on a `push` event,
## or when a new commit is pushed to the repository
on:
  push:
    branches: [ main main/templates]
  pull_request:
    branches: [ main main/templates]

## List the steps to be executed by the workflow
jobs:
  ## Set the name of the job
  tests:
    ## Configure the operating system the workflow should run on.
    ## In this case, the job on Ubuntu. Additionally, set a the job
    ## to execute on different Python versions 
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.5, 3.6, 3.8]
      max-parallel: 1
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    ## Define a sequence of steps to be executed
    steps:
      ## Use the public `checkout` action  in version v2  
      ## to checkout the existing code in the repository
    - uses: actions/checkout@v2
      ## Use the public `setup-python` actoin  in version v2  
      ## to install python on the Ubuntu based environment.
      ## Additionally, it ensures to loop through all 
      ## the defined Python versions.
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    ## Install all necessary dependecies .
    ## For example, pytest and any defined packages within the requirements.txt file.
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
              # a new PostgreSQL table.
      env:
          # The hostname used to communicate with the PostgreSQL service container
        POSTGRES_HOST: localhost
          # The default PostgreSQL port
        POSTGRES_PORT: 5432
      
    ## Run all pytests by inovking the `pytest command`
    - name: Unit Testing
      run: |
        python test_flaskr.py
        
  dockerhubpush:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: 785854/webapp:v1
